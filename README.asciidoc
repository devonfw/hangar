# devonfw Hangar

## What is Hangar?

image::documentation/assets/Takeoff.png[]

Capgemini offers a simple, Open Source, solution with which the teams and clients can create a complete Cloud based Dev & Run environment with a single command or executable.

We define a “Cloud based Dev & Run environment” as a subscription at a public cloud provider (Google Cloud, AWS, Microsoft Azure) to develop, deploy, run and manage software applications on a sophisticated infrastructure that is owned and provided by the cloud provider and managed as a single entity by the client or Capgemini. 

image::documentation/assets/Takeoff2.png[]

The environment contains everything which is needed for the development, continuous integration and deployment, provisioning, orchestration and monitoring of the application and dependent resources. It also includes all services needed for (financial) management and administration of the subscription/environment itself. 

The resulting environment has a fully working full-stack example application in source code form which is automatically compiled and build in the same environment. 

This asset can be used to accelerate and industrialize to a large extent Cloud based development

## How to use Hangar?

Hangar consists on a series of Scripts & Templates that can be used in different ways:

- Directly calling the scripts. You can find more information of each of the functionalities and example uses cases in their corresponding documentation.

- Calling the scripts inside the All-in-one Docker image, which includes the installation of all the necessary toolkits. You can find more information on https://github.com/devonfw/hangar/blob/master/setup/README.asciidoc[how to setup and use the image].

- Using the Takeoff CLI or GUI which provides a simpler and user-friendly interface for creating and managing projects. TODO

## Features

TODO

## Practical Use Cases

### Quarkus/Node.js/Angular-based project hosted and with CI/CD on Azure DevOps, and deployed on either AWS EKS or Azure AKS.

* https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-project.asciidoc[Setup Azure DevOps project]
* https://github.com/devonfw/hangar/blob/master/documentation/aws/setup-aws-account-iam-for-eks.asciidoc[Setup AWS account IAM for deployment in EKS]
* https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-repository-script.asciidoc[Setting up a repository on Azure DevOps]
* Setup Azure DevOps Pipelines:
** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-build-pipeline.asciidoc[Setting up a Build Pipeline]
** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-test-pipeline.asciidoc[Setting up a Test Pipeline]
** Quality
*** Prerequisite: https://github.com/devonfw/hangar/blob/master/documentation/aws/setup-sonarqube-instance.asciidoc[Setting up a SonarQube instance in AWS]
*** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-quality-pipeline.asciidoc[Setting up a Quality Pipeline]
** Package
*** App
**** Prerequisite: https://github.com/devonfw/hangar/blob/master/documentation/setup-container-image-registry.asciidoc[Setup Container Image Registry]
**** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-package-pipeline.asciidoc[Setting up a Package Pipeline]
*** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-library-package-pipeline.asciidoc[Setting up a library Package Pipeline]
** Setup Kubernetes deploying environment pipeline
*** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-eks-provisioning-pipeline.asciidoc[Setting up a EKS provisioning pipeline]
*** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-aks-provisioning-pipeline.asciidoc[Setting up a AKS provisioning pipeline]
** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-deploy-pipeline.asciidoc[Setting up a Deploy Pipeline]
** Setup Basic Monitoring and Logging [TBD, https://github.com/devonfw/hangar/issues/14[#14]]

### Quarkus/Node.js/Angular-based project hosted and with CI/CD on GitHub, and deployed on either AWS EKS or Azure AKS.

* https://github.com/devonfw/hangar/blob/master/documentation/aws/setup-aws-account-iam-for-eks.asciidoc[Setup AWS account IAM for deployment in EKS]
* https://github.com/devonfw/hangar/blob/master/documentation/github/setup-repository-script.asciidoc[Setting up a repository on GitHub]
* Setup GitHub workflows:
** https://github.com/devonfw/hangar/blob/master/documentation/github/setup-build-pipeline.asciidoc[Setting up a Build workflow]
** https://github.com/devonfw/hangar/blob/master/documentation/github/setup-test-pipeline.asciidoc[Setting up a Test workflow]
** Quality
*** Prerequisite: https://github.com/devonfw/hangar/blob/master/documentation/aws/setup-sonarqube-instance.asciidoc[Setting up a SonarQube instance in AWS]
*** https://github.com/devonfw/hangar/blob/master/documentation/github/setup-quality-pipeline.asciidoc[Setting up a Quality workflow]
** https://github.com/devonfw/hangar/blob/master/documentation/github/setup-ci-pipeline.asciidoc[Setting up a CI workflow]
** Package
*** App
**** Prerequisite: https://github.com/devonfw/hangar/blob/master/documentation/setup-container-image-registry.asciidoc[Setup Container Image Registry]
**** https://github.com/devonfw/hangar/blob/master/documentation/github/setup-package-pipeline.asciidoc[Setting up a Package workflow]
*** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-library-package-pipeline.asciidoc[Setting up a library Package workflow]
** Setup Kubernetes deploying environment workflow
*** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-eks-provisioning-pipeline.asciidoc[Setting up a EKS provisioning workflow]
*** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-aks-provisioning-pipeline.asciidoc[Setting up a AKS provisioning workflow]
** https://github.com/devonfw/hangar/blob/master/documentation/azure-devops/setup-deploy-pipeline.asciidoc[Setting up a Deploy workflow]

### QuickStart Wayat with Firebase on GCloud

CAUTION: If this is your first time using Firebase you need to MANUALLY accept the terms and conditions of usage.

image::documentation/assets/Firebase1.png[]

In order to do so, you need to visit https://console.firebase.google.com[this page] and create your first project.

image::documentation/assets/Firebase2.png[]

Please make sure that you mark both checkboxes accepting Firebase Conditions.

image::documentation/assets/Firebase3.png[]

It is not necessary to use Google Analytics on this project, as you will be able to delete it later. 

The important thing here is that once you accept the terms and conditions for the first time you will be able to create new Firebase Projects using Hangar scripts without issues.

## License(s)

Copyright 2022 Capgemini 

The source code on this site is licensed under the Apache Public License 2.0. See LICENSE for details.

++++
<a rel="license" href="http://creativecommons.org/licenses/by/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/80x15.png" /></a><br />The documentation (not the source code) available on this site is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License</a>.
++++
