:provider: Google Cloud
:pipeline_type: pipeline
:trigger_sentence: This pipeline will be configured to be triggered every time there is a commit to the Cloud Source Repository
:pipeline_type2: pipeline
:path_provider: gcloud
:no-PR-or-MR:
:openBrowserFlag:
= Setting up a Build {pipeline_type} on {provider}

In this section we will create a build {pipeline_type} for compiling project code. {trigger_sentence}, regardless of which branch it is made on.

The creation of the {pipeline_type2} will follow the project workflow, so a new branch named `feature/build-pipeline` will be created and the YAML file for the {pipeline_type} will be pushed to it.

Then, the new branch will be merged into the appropriate branch (provided in `-b` flag).

The script located at `/scripts/pipelines/{path_provider}/pipeline_generator.sh` will automatically create this new branch, create a build {pipeline_type} based on a YAML template appropriate for the project programming language or framework, create the Pull Request and, if it is possible, merge this new branch into the specified branch.

== Prerequisites

This script will commit and push the corresponding YAML template into your repository, so please be sure your local repository is up-to-date (i.e you have pulled latest changes with `git pull`).

== Creating the {pipeline_type} using provided script

=== Usage
[subs=attributes+]
```
pipeline_generator.sh \
  -c <config file path> \
  -n <{pipeline_type} name> \
  -l <language or framework> \
  -d <project local path> \
  [--language-version <version>] \
  [--registry-location <artifact registry>] \
  [-t <target-directory>] \
  [-b <branch>] \
  [-m <machine type for {pipeline_type} runner>]
```

NOTE: The config file for the build {pipeline_type} is located at `/scripts/pipelines/{path_provider}/templates/build/build-pipeline.cfg`.

=== Flags
[subs=attributes+]
```
-c, --config-file        [Required] Configuration file containing {pipeline_type} definition.
-n, --pipeline-name      [Required] Name that will be set to the {pipeline_type}.
-l, --language           [Required] Language or framework of the project.
-d, --local-directory    [Required] Local directory of your project.
    --language-version   [Required, if Flutter or Python] Language or framework version.
    --registry-location  [Required, if Flutter] Artifact registry location.
-t, --target-directory              Target directory of build process. Takes precedence over the language/framework default one.
-b, --target-branch                 Name of the branch to which the Pull Request will target. PR is not created if the flag is not provided.
-m, --machine-type                  Machine type for {pipeline_type} runner. Accepted values: E2_HIGHCPU_8, E2_HIGHCPU_32, N1_HIGHCPU_8, N1_HIGHCPU_32.
```

=== Examples

==== Quarkus project

===== Quarkus native project
[subs=attributes+]
```
./pipeline_generator.sh -c ./templates/build/build-pipeline.cfg -n quarkus-project-build -l quarkus -d C:/Users/$USERNAME/Desktop/quarkus-project -b develop {openBrowserFlag}
```

===== Quarkus project using JVM
[subs=attributes+]
```
./pipeline_generator.sh -c ./templates/build/build-pipeline.cfg -n quarkus-project-build -l quarkus-jvm -d C:/Users/$USERNAME/Desktop/quarkus-project -b develop {openBrowserFlag}
```

==== Node.js project
[subs=attributes+]
```
./pipeline_generator.sh -c ./templates/build/build-pipeline.cfg -n node-project-build -l node -d C:/Users/$USERNAME/Desktop/node-project -b develop {openBrowserFlag}
```

==== Angular project
[subs=attributes+]
```
./pipeline_generator.sh -c ./templates/build/build-pipeline.cfg -n angular-project-build -l angular -d C:/Users/$USERNAME/Desktop/angular-project -b develop {openBrowserFlag}
```

==== Python project
[subs=attributes+]
```
./pipeline_generator.sh -c ./templates/build/build-pipeline.cfg -n python-project-build -l python -d C:/Users/$USERNAME/Desktop/python-project -b develop --language-version 3.10 {openBrowserFlag}
```

==== Flutter project
[subs=attributes+]
```
./pipeline_generator.sh -c ./templates/build/build-pipeline.cfg -n flutter-project-build -l flutter -d C:/Users/$USERNAME/Desktop/flutter-project -b develop --language-version 3.3.4 --registry-location europe {openBrowserFlag}
```
