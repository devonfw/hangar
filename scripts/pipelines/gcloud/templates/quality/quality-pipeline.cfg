#!/bin/bash
# Mandatory flags.
mandatoryFlags="$pipelineName,$localDirectory,$language,$buildPipelineName,"
# Path to the templates.
templatesPath="scripts/pipelines/gcloud/templates/quality"
# Path to the common templates folder
commonTemplatesPipelinePath="scripts/pipelines/common/templates/quality"
# YAML file name.
yamlFile="quality-pipeline.yml"
# Script name.
scriptFile="quality.sh"
# Source branch.
sourceBranch="feature/quality-pipeline"
# Description of the trigger
triggerDescription="Trigger for quality pipeline"
# Branch trigger
branchTrigger='.*'
# Previous pipeline
previousPipelineyaml='test-pipeline.yml'
case $language in
    node | angular) dockerImage="node" ;;
    quarkus*) dockerImage="maven:3-eclipse-temurin-11" ;;
    python) dockerImage="python:${languageVersion}-slim" ;;
    *) echo -e "${red}Error: Specified language '${language}' is not supported." >&2; echo -ne ${white}; exit 1
esac
# Function that copies the script to build the application.
function copyScript {

    export sonarUrl sonarToken

    # Check if the language is quarkus.
    if [[ $language == "quarkus"* ]]
    then
        language="quarkus"
    fi
    # Copy the script.
    cp "${hangarPath}/${commonTemplatesPipelinePath}/${language}-${scriptFile}.template" "${localDirectory}/${scriptFilePath}/${scriptFile}"
}

# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {
    # if the user did not specify a custom target-directory
    # we default to the language specific defaults
    if test -z $targetDirectory
    then
        setTargetDirectory
    fi
    # Create a secret in Google Secret Manager if is not defined. Then, it gives the sonar token as value for that token.
    if ! gcloud secrets versions access latest --secret="sonar-token" &>/dev/null; then
        gcloud secrets create sonar-token --replication-policy="automatic"
    fi
    echo -n "${sonarToken}" | gcloud secrets versions add sonar-token --data-file=-
    # Setting the list of variable that will be used for this trigger
    subsitutionVariable="_SONAR_URL=${sonarUrl},_DOCKER_IMAGE=${dockerImage},_BRANCH_NAME=''"
}
