#!/bin/false
# Mandatory flags.
mandatoryFlags="$pipelineName,$localDirectory,$gCloudRegion,"
# Path to the templates.
templatesPath="scripts/pipelines/gcloud/templates/gke"
# Path to common kubernetes templates.
commonKubernetesPath="scripts/pipelines/gcloud/templates/common/kubernetes"
# YAML file name.
yamlFile="gke-provisioning.yml"
# Source branch.
sourceBranch="feature/gke-provisioning"
# Path to terraform templates.
terraformTemplatesPath="scripts/environment-provisioning/gcloud/gke"
# Path to terraform scripts.
terraformPath=".terraform/gke"
# Trigger Description
triggerDescription="Trigger to generate a GKE cluster"
# Default cluster operation.
operation="create"
# Roles that need to be applied to the cloud build service agent
roles="roles/compute.networkAdmin roles/iam.serviceAccountUser roles/storage.admin roles/container.admin"

# Install Rancher on GKE cluster.
if test -z $installRancher
then
    installRancher=false
fi

# Function that copies the necessary scripts into the directory.
function copyScript {
    # Create .terraform/gke folder if it does not exist.
    mkdir -p "${localDirectory}/${terraformPath}"
    # Set terraform variables
    "${hangarPath}"/scripts/set-config.sh --file_set_vars "${hangarPath}/${terraformTemplatesPath}"/terraform.tfvars --project_id "${gCloudProject}" --region "${gCloudRegion}"
    "${hangarPath}"/scripts/set-config.sh --file_set_vars "${hangarPath}/${terraformTemplatesPath}"/backend.tf --bucket "${gCloudProject}_cloudbuild"
    # Copy the terraform files.
    cp "${hangarPath}/${terraformTemplatesPath}/"* "${localDirectory}/${terraformPath}"

    # Copy the script to get DNS
    cp "${hangarPath}/${templatesPath}/obtain-dns.sh" "${localDirectory}/${scriptFilePath}"

    # Copy the common files for kubernetes
    cp "${hangarPath}/${commonKubernetesPath}"/*.sh "${localDirectory}/${scriptFilePath}"

    # Copy the folder for configuring prometheus if monitoring set to true
    if [[ "$activateMonitoring" != "false" ]]
    then
      mkdir -p "${localDirectory}/.prometheus"
      mkdir -p "${localDirectory}/tmp"
      wget https://github.com/prometheus-operator/kube-prometheus/archive/refs/heads/release-0.11.zip -O "${localDirectory}/tmp/kube-prometheus-v0.11.zip"
      unzip "${localDirectory}/tmp/kube-prometheus-v0.11.zip" -d "${localDirectory}/tmp"
      cp -r "${localDirectory}/tmp/kube-prometheus-release-0.11/manifests/"* "${localDirectory}/.prometheus"
      cp -r "${hangarPath}/scripts/monitoring/kube-prometheus/"* "${localDirectory}/.prometheus"
      rm -rf "${localDirectory}/tmp/"
    fi
}

function commitFiles {
    # Add the terraform files.
    git add .terraform -f

    # Changing all files to be executable.
    find .terraform -type f -name '*.sh' -exec git update-index --chmod=+x {} \;

    if [[ "$activateMonitoring" != "false" ]]
    then
      # Add the prometheus files
      git add .prometheus -f
      # Changing set up script to be executable
      git update-index --chmod=+x .prometheus/setup-k8s-monitoring.sh
      # Changing commit message
      additionalCommitMessage="monitoring "
    fi

    # Git commit and push it into the repository.
    git commit -m "[skip ci] Adding the terraform ${additionalCommitMessage}files"
    git push -u origin ${sourceBranch}
}

# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {

    # Setting the list of variable that will be used for this trigger
    subsitutionVariable="_INSTALL_RANCHER=${installRancher},_OPERATION=${operation}"
}
