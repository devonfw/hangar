steps:
- id: "Get secrets"
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
        set -e
        [[ -f .pipelines/scripts/get-secrets.sh ]] || exit 0 && .pipelines/scripts/get-secrets.sh ${TRIGGER_NAME}
        [[ -f .pipelines/scripts/get-secret-vars.sh ]] || exit 0 && .pipelines/scripts/get-secret-vars.sh ${TRIGGER_NAME}

- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://${PROJECT_ID}_cloudbuild/pipelinesArtifacts/${buildPipelineName}/commit_${SHORT_SHA}/build*.tar', '.']

- name: ${_DOCKER_IMAGE}
  entrypoint: bash
  args:
  - -c
  - |
    # In case of more than 1 tar, we extract the most recent one)
    for i in $(ls -t build_*.tar)
    do
        tar -xvf $i
        break
    done

- name: ${_DOCKER_IMAGE}
  entrypoint: bash
  args:
    - -c
    - |
      set -e
      echo -e "\n\n"
      echo "SETTING UP ENVIRONMENT"
      echo ""
      if test -f "./.pipelines/scripts/package-setup-environment.sh";
      then
        source ./.pipelines/scripts/package-setup-environment.sh ${_REGISTRY}
      fi
      [[ -f .pipelines/config/${TRIGGER_NAME}.env ]] && source .pipelines/config/${TRIGGER_NAME}.env
      echo -e "\n\n"
      echo "LOADING CREDENTIALS AND GETTING REGISTRY"
      echo $$REGISTRY_CREDENTIALS > credentials.env
      . credentials.env
      rm credentials.env
      echo -e "\n\n"
      echo "EXECUTING package.sh"
      echo ".pipelines/scripts/package.sh  -f \"${_DOCKERFILE}\" -c . -u \"$${DOCKER_USER}\" -p \"$${DOCKER_PASSWORD}\" -r \"${_REGISTRY}\" -i \"${_IMAGE_NAME}\" -b \"${_BRANCH_NAME}\" -l \"${_REGION}\" -a \"$${AWS_ACCESS_KEY}\" -s \"$${AWS_SECRET_ACCESS_KEY}\" -l \"$${AWS_REGION}\""
      .pipelines/scripts/package.sh  -f "${_DOCKERFILE}" -c . -u "$${DOCKER_USER}" -p "$${DOCKER_PASSWORD}" -r "${_REGISTRY}" -i "${_IMAGE_NAME}" -b "${_BRANCH_NAME}" -l "${_REGION}" -a "$${AWS_ACCESS_KEY}" -s "$${AWS_SECRET_ACCESS_KEY}" -l "$${AWS_REGION}"

  env:
  - 'PROJECT_ID=$PROJECT_ID'
  secretEnv:
  - 'REGISTRY_CREDENTIALS'

# mark to insert trigger

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/registry-credentials/versions/latest
    env: REGISTRY_CREDENTIALS