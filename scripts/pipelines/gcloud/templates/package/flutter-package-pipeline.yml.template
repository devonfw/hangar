steps:
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://${PROJECT_ID}_cloudbuild/pipelinesArtifacts/${buildPipelineName}/commit_${SHORT_SHA}/build*.tar', '.']

- name: 'ubuntu'
  script: |
    !/bin/bash
    # In case of more than 1 tar, we extract the most recent one)
    for i in $(ls -t build_*.tar)
    do
      tar -xvf $i
      break
    done

- name: ${_DOCKER_IMAGE}
  entrypoint: bash
  args:
  - -c
  - |
    flutter pub get
    if [[ ${_FLUTTER_PLATFORM} == "android" ]]; then
      flutter build apk --release
    elif [[ ${_FLUTTER_PLATFORM} == "web" ]]; then
      if [[ $flutterWebRenderer == "" ]]; then
        flutter build web --release --web-renderer auto --dart-define=BROWSER_IMAGE_DECODING_ENABLED=false
      # Check if the web renderer is supported
      elif ([ "$flutterWebRenderer" == "canvaskit" ] || [ "$flutterWebRenderer" == "html" ]); then
        flutter build web --release --web-renderer $flutterWebRenderer --dart-define=BROWSER_IMAGE_DECODING_ENABLED=false
      else
        echo -e "${red}Error: Web renderer $flutterWebRenderer not supported." >&2
        exit 1
      fi
    fi

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - -c
    - |
      if [[ ${_FLUTTER_PLATFORM} == "android" ]]; then
        .pipelines/scripts/package-extra.sh
      elif [[ ${_FLUTTER_PLATFORM} == "web" ]]; then
        apt-get update && apt-get install docker.io -y
        echo $$REGISTRY_CREDENTIALS > credentials.env
        . credentials.env
        rm credentials.env
        .pipelines/scripts/package.sh  -f "${_DOCKERFILE}" -c . -u "$${DOCKER_USER}" -p "$${DOCKER_PASSWORD}" -r "${_REGISTRY}" -i "${_IMAGE_NAME}" -b "${_BRANCH_NAME}" -l "${_REGION}" -a "$${AWS_ACCESS_KEY}" -s "$${AWS_SECRET_ACCESS_KEY}" -l "$${AWS_REGION}"
      fi

  env:
  - 'PROJECT_ID=$PROJECT_ID'
  - 'SHORT_SHA=$SHORT_SHA'
  - 'ANDROID_API_KEY=${_ANDROID_API_KEY}'
  - 'FLUTTER_PLATFORM=${_FLUTTER_PLATFORM}'
  secretEnv:
  - 'REGISTRY_CREDENTIALS'

# mark to insert trigger

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/registry-credentials/versions/latest
    env: REGISTRY_CREDENTIALS





