#!/bin/bash
# Mandatory flags.
mandatoryFlags="$pipelineName,$localDirectory,$language,"
# Path to the templates.
templatesPath="scripts/pipelines/gcloud/templates/build"
# Path to the common templates folder
commonTemplatesPipelinePath="scripts/pipelines/common/templates/build"
# YAML file name.
yamlFile="build-pipeline.yml"
# Script name.
scriptFile="build.sh"
# Source branch.
sourceBranch="feature/build-pipeline"
# Description of the trigger
triggerDescription="Trigger for build pipeline"
# Branch trigger
branchTrigger='.*'
# Setup Environment script
setupScriptFile="build-setup-environment.sh"
# Roles that need to be applied to the cloud build service agent
roles="roles/secretmanager.secretAccessor"


# Function that copies the script to build the application.
function copyScript {
    # Check if the language is quarkus.
    if [[ $language == "quarkus"* ]]
    then
      language_bis="quarkus"
    else
      language_bis="$language"
    fi
    # Copy the script.
    cp "${hangarPath}/${commonTemplatesPipelinePath}/${language}-${scriptFile}" "${localDirectory}/${scriptFilePath}/${scriptFile}"
    # We copy the setup environment script if it exists
    ! [ -f "${hangarPath}/${templatesPath}/${language_bis}-${setupScriptFile}" ] || cp "${hangarPath}/${templatesPath}/${language_bis}-${setupScriptFile}" "${localDirectory}/${scriptFilePath}/${setupScriptFile}"

}

# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {
    # Setting up docker image to be used inside the pipeline
    case $language in
      node | angular) dockerImage="node" ;;
      python) dockerImage="python:${languageVersion}-slim" ;;
      quarkus*) dockerImage="maven:3-eclipse-temurin-11" ;;
      flutter) dockerImage="${registryLocation}-docker.pkg.dev/${gCloudProject}/flutter/flutter:${languageVersion}" ;;
      *) echo -e "${red}Error: Specified language '${language}' is not supported." >&2; echo -ne "${white}" >&2; exit 2
    esac
    # if the user did not specify a custom target-directory
    # we default to the language specific defaults
    if test -z $targetDirectory
    then
        setTargetDirectory
    fi

    # Setting the list of variable that will be used for this trigger
    subsitutionVariable="_TARGET_DIRECTORY=${targetDirectory},_DOCKER_IMAGE=${dockerImage},_BRANCH_NAME=\${BRANCH_NAME}"
    export artifactsToPublish='${_TARGET_DIRECTORY}'
    specificEnvSubstList='${artifactsToPublish}'
}
