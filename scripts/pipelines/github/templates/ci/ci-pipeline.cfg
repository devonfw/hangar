# Mandatory flags.
mandatoryFlags="$pipelineName,$localDirectory,${buildPipelineName},${testPipelineName}${qualityPipelineName},"
# Path to the templates.
templatesPath="scripts/pipelines/github/templates/ci"
# YAML file name.
yamlFile="ci-pipeline.yml"
# Source branch.
sourceBranch="feature/ci-pipeline"


# We call copy script so we don't have to modify the pipeline generator
# This function is used to add the step in the yaml file depending on the flags given
function copyScript {


  echo -e "  $buildPipelineName:\n    uses: ./.github/workflows/build-pipeline.yml" >> "${localDirectory}/${pipelinePath}/${yamlFile}"

  if ! test -z $testPipelineName
  then
    echo -e "  $testPipelineName:\n    uses: ./.github/workflows/test-pipeline.yml" >> "${localDirectory}/${pipelinePath}/${yamlFile}"
    echo "    needs: $buildPipelineName" >> "${localDirectory}/${pipelinePath}/${yamlFile}"
  fi

  if ! test -z $qualityPipelineName
  then
    echo -e "  $qualityPipelineName:\n    uses: ./.github/workflows/quality-pipeline.yml\n    secrets: inherit" >> "${localDirectory}/${pipelinePath}/${yamlFile}"
    test -z $testPipelineName || echo "    needs: $testPipelineName" >> "${localDirectory}/${pipelinePath}/${yamlFile}"
    ! test -z $testPipelineName || echo "    needs: $buildPipelineName" >> "${localDirectory}/${pipelinePath}/${yamlFile}"
  fi
}