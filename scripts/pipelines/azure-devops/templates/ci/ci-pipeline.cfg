# Mandatory flags.
mandatoryFlags="$pipelineName,$localDirectory,$language,$sonarUrl,$sonarToken"
# Path to the templates.
templatesPath=("scripts/pipelines/azure-devops/templates/build" "scripts/pipelines/azure-devops/templates/test" "scripts/pipelines/azure-devops/templates/quality" "scripts/pipelines/azure-devops/templates/ci")
# Path to the common templates folder
commonTemplatesPipelinePath=("scripts/pipelines/common/templates/build" "scripts/pipelines/common/templates/test" "scripts/pipelines/common/templates/quality")
# YAML file name.
yamlFile="ci-pipeline.yml"
# Script name.
scriptFile=("build.sh" "test.sh" "quality.sh")
# Source branch.
sourceBranch="feature/ci-pipeline"
# Setup Environment script
setupScriptFile="quality-setup-environment.sh"

# Function that copies the script to build, test and check quality of the application.
function copyScript {
    # Copy the build script.
    cp "${hangarPath}/${commonTemplatesPipelinePath[0]}/${language}-${scriptFile[0]}" "${localDirectory}/${scriptFilePath}/${scriptFile[0]}"
    # Copy the test script.
    cp "${hangarPath}/${commonTemplatesPipelinePath[1]}/${language}-${scriptFile[1]}" "${localDirectory}/${scriptFilePath}/${scriptFile[1]}"
    # Check if the language is quarkus.
    if [[ $language == "quarkus"* ]]
    then
        language="quarkus"
    fi
    # Copy the quality script.
    cp "${hangarPath}/${commonTemplatesPipelinePath[2]}/${language}-${scriptFile[2]}.template" "${localDirectory}/${scriptFilePath}/${scriptFile[2]}"
    ! [ -f "${hangarPath}/${templatesPath[2]}/${language}-${setupScriptFile}" ] || cp "${hangarPath}/${templatesPath[2]}/${language}-${setupScriptFile}" "${localDirectory}/${scriptFilePath}/${setupScriptFile}"
}

# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {
   
    # Add sonar credentials.
    az pipelines variable create --name "sonarUrl" --pipeline-name "$pipelineName" --value "${sonarUrl}"
    az pipelines variable create --name "sonarToken" --pipeline-name "$pipelineName" --value "${sonarToken}" --secret true
    # if the user did not specify a custom target-directory
    # we default to the language specific defaults
    if test -z $targetDirectory
    then
        setTargetDirectory
    fi
    az pipelines variable create --name "targetPath" --pipeline-name "${pipelineName}" --value "${targetDirectory}"
}
